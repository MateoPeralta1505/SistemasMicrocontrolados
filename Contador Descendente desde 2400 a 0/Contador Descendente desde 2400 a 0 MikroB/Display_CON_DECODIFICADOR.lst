;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/11/2024 21:55:06
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2839      	GOTO       57
_Div_16x16_U:
;__Lib_Math.mpas,207 :: 		
;__Lib_Math.mpas,213 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,214 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,215 :: 		
0x0005	0x01F8      	CLRF       R8
;__Lib_Math.mpas,216 :: 		
0x0006	0x01F9      	CLRF       R9
;__Lib_Math.mpas,217 :: 		
0x0007	0x3010      	MOVLW      16
;__Lib_Math.mpas,218 :: 		
0x0008	0x00FC      	MOVWF      R12
;__Lib_Math.mpas,219 :: 		
0x0009	0x0D71      	RLF        R1, 0
;__Lib_Math.mpas,220 :: 		
0x000A	0x0DF8      	RLF        R8, 1
;__Lib_Math.mpas,221 :: 		
0x000B	0x0DF9      	RLF        R9, 1
;__Lib_Math.mpas,222 :: 		
0x000C	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,223 :: 		
0x000D	0x02F8      	SUBWF      R8, 1
;__Lib_Math.mpas,224 :: 		
0x000E	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,225 :: 		
0x000F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,226 :: 		
0x0010	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,227 :: 		
0x0011	0x02F9      	SUBWF      R9, 1
;__Lib_Math.mpas,228 :: 		
0x0012	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,229 :: 		
0x0013	0x281B      	GOTO       $+8
;__Lib_Math.mpas,230 :: 		
0x0014	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,231 :: 		
0x0015	0x07F8      	ADDWF      R8, 1
;__Lib_Math.mpas,232 :: 		
0x0016	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,233 :: 		
0x0017	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,234 :: 		
0x0018	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,235 :: 		
0x0019	0x07F9      	ADDWF      R9, 1
;__Lib_Math.mpas,236 :: 		
0x001A	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,237 :: 		
0x001B	0x0DF0      	RLF        R0, 1
;__Lib_Math.mpas,238 :: 		
0x001C	0x0DF1      	RLF        R1, 1
;__Lib_Math.mpas,239 :: 		
0x001D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.mpas,240 :: 		
0x001E	0x2809      	GOTO       $-21
;__Lib_Math.mpas,242 :: 		
L_end_Div_16x16_U:
0x001F	0x0008      	RETURN
; end of _Div_16x16_U
_Mul_8x8_U:
;__Lib_Math.mpas,87 :: 		
;__Lib_Math.mpas,93 :: 		
0x0020	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,94 :: 		
0x0021	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,95 :: 		
0x0022	0x0870      	MOVF       R0, 0
;__Lib_Math.mpas,96 :: 		
0x0023	0x00F1      	MOVWF      R1
;__Lib_Math.mpas,97 :: 		
0x0024	0x01F0      	CLRF       R0
;__Lib_Math.mpas,98 :: 		
0x0025	0x3008      	MOVLW      8
;__Lib_Math.mpas,99 :: 		
0x0026	0x00FC      	MOVWF      R12
;__Lib_Math.mpas,100 :: 		
0x0027	0x0871      	MOVF       R1, 0
;__Lib_Math.mpas,101 :: 		
0x0028	0x0CF4      	RRF        R4, 1
;__Lib_Math.mpas,102 :: 		
0x0029	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,103 :: 		
0x002A	0x282F      	GOTO       $+5
;__Lib_Math.mpas,104 :: 		
0x002B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.mpas,105 :: 		
0x002C	0x2828      	GOTO       $-4
;__Lib_Math.mpas,106 :: 		
0x002D	0x01F1      	CLRF       R1
;__Lib_Math.mpas,107 :: 		
0x002E	0x3400      	RETLW      0
;__Lib_Math.mpas,108 :: 		
0x002F	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,109 :: 		
0x0030	0x2834      	GOTO       $+4
;__Lib_Math.mpas,110 :: 		
0x0031	0x0CF4      	RRF        R4, 1
;__Lib_Math.mpas,111 :: 		
0x0032	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,112 :: 		
0x0033	0x07F1      	ADDWF      R1, 1
;__Lib_Math.mpas,113 :: 		
0x0034	0x0CF1      	RRF        R1, 1
;__Lib_Math.mpas,114 :: 		
0x0035	0x0CF0      	RRF        R0, 1
;__Lib_Math.mpas,115 :: 		
0x0036	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.mpas,116 :: 		
0x0037	0x2831      	GOTO       $-6
;__Lib_Math.mpas,118 :: 		
L_end_Mul_8x8_U:
0x0038	0x0008      	RETURN
; end of _Mul_8x8_U
_main:
;Display_CON_DECODIFICADOR.mbas,8 :: 		main:
;Display_CON_DECODIFICADOR.mbas,10 :: 		trisb = 0       'Puerto B como salida
0x0039	0x1683      	BSF        STATUS, 5
0x003A	0x1303      	BCF        STATUS, 6
0x003B	0x0186      	CLRF       TRISB
;Display_CON_DECODIFICADOR.mbas,11 :: 		trisc = 0       'Puerto C como salida
0x003C	0x0187      	CLRF       TRISC
;Display_CON_DECODIFICADOR.mbas,12 :: 		trisd = 0       'Puerto D como salida
0x003D	0x0188      	CLRF       TRISD
;Display_CON_DECODIFICADOR.mbas,13 :: 		portb = 0       'Puerto B empieza en cero
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x0186      	CLRF       PORTB
;Display_CON_DECODIFICADOR.mbas,14 :: 		portc = 0       'Puerto C empieza en cero
0x0040	0x0187      	CLRF       PORTC
;Display_CON_DECODIFICADOR.mbas,15 :: 		portd = 0       'Puerto D empieza en cero
0x0041	0x0188      	CLRF       PORTD
;Display_CON_DECODIFICADOR.mbas,16 :: 		anselh = 0      'Puerto B como digital
0x0042	0x1683      	BSF        STATUS, 5
0x0043	0x1703      	BSF        STATUS, 6
0x0044	0x0189      	CLRF       ANSELH
;Display_CON_DECODIFICADOR.mbas,18 :: 		while (1)       'Inicio bucle infinito
L__main2:
;Display_CON_DECODIFICADOR.mbas,19 :: 		For contador = 2400 to 0 step -6                                              'Bucle for "contador" desde 2400 a 0 descendente (pasos de -6)
0x0045	0x3060      	MOVLW      96
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x1303      	BCF        STATUS, 6
0x0048	0x00A3      	MOVWF      _contador
0x0049	0x3009      	MOVLW      9
0x004A	0x00A4      	MOVWF      _contador+1
L__main6:
0x004B	0x3000      	MOVLW      0
0x004C	0x0224      	SUBWF      _contador+1, 0
0x004D	0x1D03      	BTFSS      STATUS, 2
0x004E	0x2851      	GOTO       L__main24
0x004F	0x3000      	MOVLW      0
0x0050	0x0223      	SUBWF      _contador, 0
L__main24:
0x0051	0x1C03      	BTFSS      STATUS, 0
0x0052	0x2901      	GOTO       L__main10
;Display_CON_DECODIFICADOR.mbas,20 :: 		unimil = contador / 1000                                                  'Equivalente matemático de la variable "unimil"
0x0053	0x30E8      	MOVLW      232
0x0054	0x00F4      	MOVWF      R4
0x0055	0x3003      	MOVLW      3
0x0056	0x00F5      	MOVWF      R4+1
0x0057	0x0823      	MOVF       _contador, 0
0x0058	0x00F0      	MOVWF      R0
0x0059	0x0824      	MOVF       _contador+1, 0
0x005A	0x00F1      	MOVWF      R0+1
0x005B	0x2003      	CALL       _Div_16x16_U
0x005C	0x0870      	MOVF       R0, 0
0x005D	0x00AC      	MOVWF      FLOC__main+5
0x005E	0x0871      	MOVF       R0+1, 0
0x005F	0x00AD      	MOVWF      FLOC__main+6
0x0060	0x082C      	MOVF       FLOC__main+5, 0
0x0061	0x00A5      	MOVWF      _unimil
;Display_CON_DECODIFICADOR.mbas,21 :: 		centena = (contador / 100) - (unimil * 10)                                'Equivalente matemático de la variable "centena"
0x0062	0x3064      	MOVLW      100
0x0063	0x00F4      	MOVWF      R4
0x0064	0x01F5      	CLRF       R4+1
0x0065	0x0823      	MOVF       _contador, 0
0x0066	0x00F0      	MOVWF      R0
0x0067	0x0824      	MOVF       _contador+1, 0
0x0068	0x00F1      	MOVWF      R0+1
0x0069	0x2003      	CALL       _Div_16x16_U
0x006A	0x0870      	MOVF       R0, 0
0x006B	0x00A7      	MOVWF      FLOC__main
0x006C	0x0871      	MOVF       R0+1, 0
0x006D	0x00A8      	MOVWF      FLOC__main+1
0x006E	0x082C      	MOVF       FLOC__main+5, 0
0x006F	0x00F0      	MOVWF      R0
0x0070	0x300A      	MOVLW      10
0x0071	0x00F4      	MOVWF      R4
0x0072	0x2020      	CALL       _Mul_8x8_U
0x0073	0x0870      	MOVF       R0, 0
0x0074	0x0227      	SUBWF      FLOC__main, 0
0x0075	0x00AB      	MOVWF      FLOC__main+4
0x0076	0x082B      	MOVF       FLOC__main+4, 0
0x0077	0x00A6      	MOVWF      _centena
;Display_CON_DECODIFICADOR.mbas,22 :: 		decena = (contador / 10) - ((unimil * 100) + (centena * 10))              'Equivalente matemático de la variable "decena"
0x0078	0x300A      	MOVLW      10
0x0079	0x00F4      	MOVWF      R4
0x007A	0x01F5      	CLRF       R4+1
0x007B	0x0823      	MOVF       _contador, 0
0x007C	0x00F0      	MOVWF      R0
0x007D	0x0824      	MOVF       _contador+1, 0
0x007E	0x00F1      	MOVWF      R0+1
0x007F	0x2003      	CALL       _Div_16x16_U
0x0080	0x0870      	MOVF       R0, 0
0x0081	0x00A9      	MOVWF      FLOC__main+2
0x0082	0x0871      	MOVF       R0+1, 0
0x0083	0x00AA      	MOVWF      FLOC__main+3
0x0084	0x082C      	MOVF       FLOC__main+5, 0
0x0085	0x00F0      	MOVWF      R0
0x0086	0x3064      	MOVLW      100
0x0087	0x00F4      	MOVWF      R4
0x0088	0x2020      	CALL       _Mul_8x8_U
0x0089	0x0870      	MOVF       R0, 0
0x008A	0x00A7      	MOVWF      FLOC__main
0x008B	0x082B      	MOVF       FLOC__main+4, 0
0x008C	0x00F0      	MOVWF      R0
0x008D	0x300A      	MOVLW      10
0x008E	0x00F4      	MOVWF      R4
0x008F	0x2020      	CALL       _Mul_8x8_U
0x0090	0x0827      	MOVF       FLOC__main, 0
0x0091	0x07F0      	ADDWF      R0, 1
0x0092	0x0870      	MOVF       R0, 0
0x0093	0x02A9      	SUBWF      FLOC__main+2, 1
0x0094	0x0829      	MOVF       FLOC__main+2, 0
0x0095	0x00A2      	MOVWF      _decena
;Display_CON_DECODIFICADOR.mbas,23 :: 		unidad = contador - ((unimil * 1000) + (centena * 100) + (decena * 10))   'Equivalente matemático de la variable "unidad"
0x0096	0x082C      	MOVF       FLOC__main+5, 0
0x0097	0x00F0      	MOVWF      R0
0x0098	0x30E8      	MOVLW      232
0x0099	0x00F4      	MOVWF      R4
0x009A	0x2020      	CALL       _Mul_8x8_U
0x009B	0x0870      	MOVF       R0, 0
0x009C	0x00A7      	MOVWF      FLOC__main
0x009D	0x082B      	MOVF       FLOC__main+4, 0
0x009E	0x00F0      	MOVWF      R0
0x009F	0x3064      	MOVLW      100
0x00A0	0x00F4      	MOVWF      R4
0x00A1	0x2020      	CALL       _Mul_8x8_U
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x07A7      	ADDWF      FLOC__main, 1
0x00A4	0x0829      	MOVF       FLOC__main+2, 0
0x00A5	0x00F0      	MOVWF      R0
0x00A6	0x300A      	MOVLW      10
0x00A7	0x00F4      	MOVWF      R4
0x00A8	0x2020      	CALL       _Mul_8x8_U
0x00A9	0x0827      	MOVF       FLOC__main, 0
0x00AA	0x07F0      	ADDWF      R0, 1
0x00AB	0x0870      	MOVF       R0, 0
0x00AC	0x0223      	SUBWF      _contador, 0
0x00AD	0x00A0      	MOVWF      _unidad
;Display_CON_DECODIFICADOR.mbas,24 :: 		if contador < 255 then portd = contador end if                            'Condición para mostrar contador en binario siempre y cuando contador sea menor a 255
0x00AE	0x3000      	MOVLW      0
0x00AF	0x0224      	SUBWF      _contador+1, 0
0x00B0	0x1D03      	BTFSS      STATUS, 2
0x00B1	0x28B4      	GOTO       L__main25
0x00B2	0x30FF      	MOVLW      255
0x00B3	0x0223      	SUBWF      _contador, 0
L__main25:
0x00B4	0x1803      	BTFSC      STATUS, 0
0x00B5	0x28B8      	GOTO       L__main12
0x00B6	0x0823      	MOVF       _contador, 0
0x00B7	0x0088      	MOVWF      PORTD
L__main12:
;Display_CON_DECODIFICADOR.mbas,25 :: 		for veces = 0 to 85         'Bulce for "veces" de 0 a 100 para rotulación del display
0x00B8	0x01A1      	CLRF       _veces
L__main15:
;Display_CON_DECODIFICADOR.mbas,26 :: 		portc = 0         'Abro transistores
0x00B9	0x0187      	CLRF       PORTC
;Display_CON_DECODIFICADOR.mbas,27 :: 		portb = unimil    'Coloco el dato que quiero visualizar en el display
0x00BA	0x0825      	MOVF       _unimil, 0
0x00BB	0x0086      	MOVWF      PORTB
;Display_CON_DECODIFICADOR.mbas,28 :: 		portc = %0001     'Cierro transistores
0x00BC	0x3001      	MOVLW      1
0x00BD	0x0087      	MOVWF      PORTC
;Display_CON_DECODIFICADOR.mbas,29 :: 		delay_ms(1)       'retraso de 1ms
0x00BE	0x3007      	MOVLW      7
0x00BF	0x00FC      	MOVWF      R12
0x00C0	0x307D      	MOVLW      125
0x00C1	0x00FD      	MOVWF      R13
L__main19:
0x00C2	0x0BFD      	DECFSZ     R13, 1
0x00C3	0x28C2      	GOTO       L__main19
0x00C4	0x0BFC      	DECFSZ     R12, 1
0x00C5	0x28C2      	GOTO       L__main19
;Display_CON_DECODIFICADOR.mbas,31 :: 		portc = 0         'Abro transistores
0x00C6	0x0187      	CLRF       PORTC
;Display_CON_DECODIFICADOR.mbas,32 :: 		portb = centena   'Coloco el dato que quiero visualizar en el display
0x00C7	0x0826      	MOVF       _centena, 0
0x00C8	0x0086      	MOVWF      PORTB
;Display_CON_DECODIFICADOR.mbas,33 :: 		portc = %0010     'Cierro transistores
0x00C9	0x3002      	MOVLW      2
0x00CA	0x0087      	MOVWF      PORTC
;Display_CON_DECODIFICADOR.mbas,34 :: 		delay_ms(1)       'retraso de 1ms
0x00CB	0x3007      	MOVLW      7
0x00CC	0x00FC      	MOVWF      R12
0x00CD	0x307D      	MOVLW      125
0x00CE	0x00FD      	MOVWF      R13
L__main20:
0x00CF	0x0BFD      	DECFSZ     R13, 1
0x00D0	0x28CF      	GOTO       L__main20
0x00D1	0x0BFC      	DECFSZ     R12, 1
0x00D2	0x28CF      	GOTO       L__main20
;Display_CON_DECODIFICADOR.mbas,36 :: 		portc = 0         'Abro transistores
0x00D3	0x0187      	CLRF       PORTC
;Display_CON_DECODIFICADOR.mbas,37 :: 		portb = decena    'Coloco el dato que quiero visualizar en el display
0x00D4	0x0822      	MOVF       _decena, 0
0x00D5	0x0086      	MOVWF      PORTB
;Display_CON_DECODIFICADOR.mbas,38 :: 		portc = %0100     'Cierro transistores
0x00D6	0x3004      	MOVLW      4
0x00D7	0x0087      	MOVWF      PORTC
;Display_CON_DECODIFICADOR.mbas,39 :: 		delay_ms(1)       'retraso de 1ms
0x00D8	0x3007      	MOVLW      7
0x00D9	0x00FC      	MOVWF      R12
0x00DA	0x307D      	MOVLW      125
0x00DB	0x00FD      	MOVWF      R13
L__main21:
0x00DC	0x0BFD      	DECFSZ     R13, 1
0x00DD	0x28DC      	GOTO       L__main21
0x00DE	0x0BFC      	DECFSZ     R12, 1
0x00DF	0x28DC      	GOTO       L__main21
;Display_CON_DECODIFICADOR.mbas,41 :: 		portc = 0         'Abro transistores
0x00E0	0x0187      	CLRF       PORTC
;Display_CON_DECODIFICADOR.mbas,42 :: 		portb = unidad    'Coloco el dato que quiero visualizar en el display
0x00E1	0x0820      	MOVF       _unidad, 0
0x00E2	0x0086      	MOVWF      PORTB
;Display_CON_DECODIFICADOR.mbas,43 :: 		portc = %1000     'Cierro transistores
0x00E3	0x3008      	MOVLW      8
0x00E4	0x0087      	MOVWF      PORTC
;Display_CON_DECODIFICADOR.mbas,44 :: 		delay_ms(1)       'retraso de 1ms
0x00E5	0x3007      	MOVLW      7
0x00E6	0x00FC      	MOVWF      R12
0x00E7	0x307D      	MOVLW      125
0x00E8	0x00FD      	MOVWF      R13
L__main22:
0x00E9	0x0BFD      	DECFSZ     R13, 1
0x00EA	0x28E9      	GOTO       L__main22
0x00EB	0x0BFC      	DECFSZ     R12, 1
0x00EC	0x28E9      	GOTO       L__main22
;Display_CON_DECODIFICADOR.mbas,45 :: 		next veces                   'Final del bucle for "veces" para la rotulación del display
0x00ED	0x0821      	MOVF       _veces, 0
0x00EE	0x3A55      	XORLW      85
0x00EF	0x1903      	BTFSC      STATUS, 2
0x00F0	0x28F3      	GOTO       L__main18
0x00F1	0x0AA1      	INCF       _veces, 1
0x00F2	0x28B9      	GOTO       L__main15
L__main18:
;Display_CON_DECODIFICADOR.mbas,46 :: 		next contador                    'Fin bucle for "contador"
0x00F3	0x3000      	MOVLW      0
0x00F4	0x0624      	XORWF      _contador+1, 0
0x00F5	0x1D03      	BTFSS      STATUS, 2
0x00F6	0x28F9      	GOTO       L__main26
0x00F7	0x3000      	MOVLW      0
0x00F8	0x0623      	XORWF      _contador, 0
L__main26:
0x00F9	0x1903      	BTFSC      STATUS, 2
0x00FA	0x2901      	GOTO       L__main10
0x00FB	0x30FA      	MOVLW      250
0x00FC	0x07A3      	ADDWF      _contador, 1
0x00FD	0x1803      	BTFSC      STATUS, 0
0x00FE	0x0AA4      	INCF       _contador+1, 1
0x00FF	0x03A4      	DECF       _contador+1, 1
0x0100	0x284B      	GOTO       L__main6
L__main10:
;Display_CON_DECODIFICADOR.mbas,47 :: 		wend            'Fin bucle infinito
0x0101	0x2845      	GOTO       L__main2
L_end_main:
0x0102	0x2902      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [29]    _Div_16x16_U
0x0020      [25]    _Mul_8x8_U
0x0039     [202]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0003       [1]    STATUS
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0020       [1]    _unidad
0x0021       [1]    _veces
0x0022       [1]    _decena
0x0023       [2]    _contador
0x0025       [1]    _unimil
0x0026       [1]    _centena
0x0027       [7]    FLOC__main
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0189       [1]    ANSELH
